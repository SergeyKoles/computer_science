package yandexChampionship;

/**
 * A. Развозка фанатов
 *
 * Ограничение времени	1 секунда
 * Ограничение памяти	64Mb
 * Ввод	стандартный ввод или input.txt
 * Вывод	стандартный вывод или output.txt
 * После футбольного матча фанаты пытаются уехать домой на такси.
 * Чтобы сэкономить, они объединяются в группы: фанат присоединяется к группе, если знает хотя бы одного человека из неё,
 * группа хочет ехать исключительно в одной машине, а две разные группы отказываются ехать вместе.
 * Таксопарк владеет ограниченным числом машин заданной вместимости.
 * Определите, получится ли у таксопарка развезти экономных фанатов.
 *
 * Формат ввода
 * В первой строчке задано число N — число фанатов, во второй число М — количество знакомств между фанатами.
 * Далее следует M пар чисел от 0 до N-1, разделенных пробелом: каждая пара означает обоюдное знакомство между фанатами.
 * Далее следует число K — количество типов машин, и K пар вида (вместимость машины, количество таких машин).
 * Пары гарантированно уникальны.
 *
 * 1 <= N <= 1000
 *
 * 0 <= K <= 1000
 *
 * Формат вывода
 * На выходе должно быть число 1, если у таксопарка получится развести фанатов, и 0, если не получится.
 *
 * Пример 1
 * Ввод	Вывод
 * 6
 * 3
 * 0 1
 * 1 2
 * 4 5
 * 2
 * 3 2
 * 5 1
 * 1
 * Пример 2
 * Ввод	Вывод
 * 6
 * 0
 * 1
 * 6 5
 * 0
 * Пример 3
 * Ввод	Вывод
 * 3
 * 2
 * 0 1
 * 1 2
 * 1
 * 2 2
 */

public class FanShipment {
}
